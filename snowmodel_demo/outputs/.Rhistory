# Simple example of a Gibbs sampler
#############
########
# first, recall our simple bivariate normal sampler
rbvn<-function (n, rho){  #function for drawing an arbitrary number of independent samples from the bivariate standard normal distribution.
x <- rnorm(n, 0, 1)
y <- rnorm(n, rho * x, sqrt(1 - rho^2))
cbind(x, y)
}
bvn<-rbvn(10000,0.98)
par(mfrow=c(3,2))
plot(bvn,col=1:10000)
plot(bvn,type="l")
plot(ts(bvn[,1]))
plot(ts(bvn[,2]))
hist(bvn[,1],40)
hist(bvn[,2],40)
par(mfrow=c(1,1))
#############
# Now construct a Gibbs sampler alternative
gibbs<-function (n, rho){    # a gibbs sampler implementation of a bivariate random number generator
mat <- matrix(ncol = 2, nrow = n)   # matrix for storing the random samples
x <- 0
y <- 0
mat[1, ] <- c(x, y)        # initialize the markov chain
for (i in 2:n) {
x <- rnorm(1, rho * y, sqrt(1 - rho^2))        # sample from x conditional on y
y <- rnorm(1, rho * x, sqrt(1 - rho^2))        # sample from y conditional on x
mat[i, ] <- c(x, y)
}
mat
}
##########
# Test the Gibbs sampler
bvn<-gibbs(10000,0.98)
par(mfrow=c(3,2))
plot(bvn,col=1:10000)
plot(bvn,type="l")
plot(ts(bvn[,1]))
plot(ts(bvn[,2]))
hist(bvn[,1],40)
hist(bvn[,2],40)
par(mfrow=c(1,1))
###########
# Myxomatosis example in BUGS modeling language
model {
#############
# LIKELIHOOD
############
for(obs in 1:n.observations){
titer[obs] ~ dgamma(shape,rate)
}
#############
# PRIORS
############
shape ~ dgamma(0.001,0.001)
scale ~ dgamma(0.01,0.01)
rate <- 1/scale   # convert the scale parameter to a "rate" for BUGS
}
##########
# Write the BUGS model to file
cat("
model {
#############
# LIKELIHOOD
############
for(obs in 1:n.observations){
titer[obs] ~ dgamma(shape,rate)
}
#############
# PRIORS
############
shape ~ dgamma(0.001,0.001)
scale ~ dgamma(0.01,0.01)
rate <- 1/scale
}
", file="BUGSmodel.txt")
############
# Encapsulate the data into a single "list" object
myx.data.for.bugs <- list(
titer = Myx$titer,
n.observations = length(Myx$titer)
)
myx.data.for.bugs
###########
# Function for generating random initial values for all free parameters
init.vals.for.bugs <- function(){
init.list <- list(
shape=runif(1,20,100),
scale=runif(1,0.05,0.3)
)
return(init.list)
}
init.vals.for.bugs()
init.vals.for.bugs()
init.vals.for.bugs()
###########
# Run JAGS!!!!
##########
library(R2jags)
library(coda)
params.to.store <- c("shape","scale")
jags.fit <- jags(data=myx.data.for.bugs,inits=init.vals.for.bugs,parameters.to.save=params.to.store,n.iter=5000,model.file="BUGSmodel.txt",n.chains = 3,n.burnin = 0 )
jagsfit.mcmc <- as.mcmc(jags.fit)   # convert to "MCMC" object (coda package)
summary(jagsfit.mcmc)
plot(jagsfit.mcmc)
################
# Run the chains for longer!
jags.fit <- jags(data=myx.data.for.bugs,inits=init.vals.for.bugs,parameters.to.save=params.to.store,n.iter=50000,model.file="BUGSmodel.txt",n.chains = 3, n.burnin=10000,n.thin = 20)
jagsfit.mcmc <- as.mcmc(jags.fit)   # convert to "MCMC" object (coda package)
summary(jagsfit.mcmc)
plot(jagsfit.mcmc)
##############
# Run convergence diagnostics
gelman.diag(jagsfit.mcmc)
# Note this is a huge file
week1_transects <- read.csv("~/Desktop/UNR/1st Smester, Fall 2018/NRES 746, Advanced Analysis/Student Lead Topic, Accounting for spatial autocorrelation/Snow EX Data/2017.02.08/SnowEx17_GPR_Week1_transects.txt")
head(week1_transects)
tail(week1_transects)
snow_depth <- week1_transects[,7]
lat <- week1_transects[,4]
long <-week1_transects[,3]
plot(long[1:1000],lat[1:1000]) # Plotting the part of a transect
plot(long,lat) # This might take a while to generate
# Looking at Normal distrobution of snow depth
hist(snow_depth)
t.test(snow_depth)
# Dividing data by transect
transect46 = week1_transects[which(week1_transects$TRANSECT == 46),]
transect1 = week1_transects[which(week1_transects$TRANSECT == 1),]
#Building a matrix of semivariogram bata for transect #1
library(geosphere)
ed <- vector(mode="numeric", length=length(transect1$TRACE))
semivar <- vector(mode="numeric", length=length(transect1$TRACE))
i <- 1
for( j in 1:length(transect1$TRACE)) {
ed[j] <- distm(c(transect1$LONG[i], transect1$LAT[i]), c(transect1$LONG[j], transect1$LAT[j]), fun = distHaversine) # euclidean distance [meters]
semivar[j] <- (snow_depth[i]-snow_depth[j])^2 # semivariogram
}
plot(ed,semivar)
install.packages("ape")
install.packages("glmmTMB")
90.62+26.56+52+155.68+209.2+57.84+240
90.62+26.56+52+155.68+209.2+57.84+240
90.62 + 26.56 + 52 + 155.68 + 209.20 + 57.84 + 240
831.90/3
155.68/3
clc
c
90.62 + 26.56 + 52 + 155.68 + 209.20 + 57.84 + 240
90.62 + 26.56 + 52 + 155.68 + 209.20 + 57.84 + 240
90.62 + 26.56 + 52 + 209.20 + 57.84
/3
436.22/3
1410-928
482/1410
3.14/144
3.14/2^2/144
dat.1 <- "Title"
dat.2 <- "Notes"
df.1 <- c(1:3)
df.2 <- matrix(1:9, nrow=3, byrow=TRUE)
df.1
install.packages("readgrads")
13/5/15
13.5/15
# Select the start date of the model run
startdate=[2014,9,1];
# Select the start date of the model run
startdate=c(2014,9,1);
nasa
install.packages("tbl_cube")
library("tidyverse", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
nasa
view (nasa)
nasa
select(nasa, cloudhigh:cloudmid)
select(nasa, matches("temp"))
n.col = 1121
n.row = 759
llx = 489747 # utm, zone 10, (m)
lly = 4853924 # utm 10, zone 10, (m)
cellsize = 100 # (m)
poi.east = 591144     #utm, zone 10, (m)
poi.north = 4919499   #utm, zone 10, (m)
x.cell = (poi.east-llx)/cellsize
y.cell = (poi.east-llx)/cellsize
x.cell = floor((poi.east-llx)/cellsize)
y.cell = floor((poi.east-llx)/cellsize)
poi <= c(591144,4919499)
poi <- c(591144,4919499)
poi[1]
poi[2]
cell.find <- function(poi = c(591144,4919499),
n.col = 1121,
n.row = 759,
llx = 489747, # utm, zone 10, (m)
lly = 4853924, # utm 10, zone 10, (m)
cellsize = 100, # (m)
) {
poi.east <- poi[1]     #utm, zone 10, (m)
poi.north <- poi[2]    #utm, zone 10, (m)
x.cell <- floor((poi.east-llx)/cellsize)
y.cell <- floor((poi.north-lly)/cellsize)
cell <- c(x.cell,y.cell)
return(cell)
}
cell.find <- function(poi = c(591144,4919499),
n.col = 1121,
n.row = 759,
llx = 489747, # utm, zone 10, (m)
lly = 4853924, # utm 10, zone 10, (m)
cellsize = 100, # (m)
)
{
poi.east <- poi[1]     #utm, zone 10, (m)
poi.north <- poi[2]    #utm, zone 10, (m)
x.cell <- floor((poi.east-llx)/cellsize)
y.cell <- floor((poi.north-lly)/cellsize)
cell <- c(x.cell,y.cell)
return(cell)
}
cell.find <- function(poi = c(591144,4919499),
n.col = 1121,
n.row = 759,
llx = 489747, # utm, zone 10, (m)
lly = 4853924, # utm 10, zone 10, (m)
cellsize = 100 # (m)
)
{
poi.east <- poi[1]     #utm, zone 10, (m)
poi.north <- poi[2]    #utm, zone 10, (m)
x.cell <- floor((poi.east-llx)/cellsize)
y.cell <- floor((poi.north-lly)/cellsize)
cell <- c(x.cell,y.cell)
return(cell)
}
McKenzie.utm10 <- c(c(591144,4919499))
McKenzie.cell <- cell.find(poi)
cell.find <- function(poi = c(591144,4919499),
n.col = 1121,
n.row = 759,
llx = 489747, # utm, zone 10, (m)
lly = 4853924, # utm 10, zone 10, (m)
cellsize = 100 # (m)
)
{
poi.east <- poi[1]     #utm, zone 10, (m)
poi.north <- poi[2]    #utm, zone 10, (m)
x.cell <- floor((poi.east-llx)/cellsize)
y.cell <- floor((poi.north-lly)/cellsize)
cell <- c(x.cell,y.cell)
return(cell)
}
McKenzie.utm10 <- c(c(591144,4919499))
McKenzie.cell <- cell.find(poi)
McKenzie.cell <- cell.find(McKenzie)
McKenzie.cell <- cell.find(McKenzie.utm10)
cell.find <- function(poi = c(591144,4919499),
n.col = 1121,
n.row = 759,
llx = 489747, # utm, zone 10, (m)
lly = 4853924, # utm 10, zone 10, (m)
cellsize = 100 # (m)
)
{
poi.east <- poi[1]     #utm, zone 10, (m)
poi.north <- poi[2]    #utm, zone 10, (m)
x.cell <- floor((poi.east-llx)/cellsize)
y.cell <- floor((poi.north-lly)/cellsize)
cell <- c(x.cell,y.cell)
return(cell)
}
Hogg.Pass.utm10 <- c(591144,4919499)
Hogg.Pass.cell <- cell.find(Hogg.Pass.utm10)
McKenzie.utm10 <- c(590047,4895863)
McKenzie.cell <- cell.find(McKenzie.utm10)
Roaring.River.utm10 <- c(577844,4861120)
Roaring.River.cell <- cell.find(Roaring.River.utm10)
install.packages("grads")
set.seed(8675309)
set.seed(8675309)
m <- matrix(rnorm(25),nrow = 5, ncol = 5)
df <- ad.data.frame(m)
df <- as.data.frame(m)
names(df) <- c("age","height","weight","measure1","measure2")
df[1,]
df[,1]
df$age
smallerdf <- df[,c("age","height")]
evansmallerdf <-smallerdf[smallerdf$age < 1,]
View(evansmallerdf)
View(smallerdf)
smallerdf$age < 1
View(evansmallerdf)
View(smallerdf)
#####################################################################################
### McKenzie B&B Fire project ******* singel cell model *******
### This script compares SnoTel Stations and a SnowModel output for water year 2004
### SnoTel Data Collection with snotelr package
### SnowModel output files were manipulated with MatLab
#####################################################################################
############### Plotting both Hogg Pass and McKenzie ###############
# setting the working directory
setwd("~/Desktop/Figures for Presentation")
# loading librarys
library(snotelr)
# downloading individual data, SWE[mm] and temp[Degrees C]
Hogg_Pass <- snotel_download(site_id = 526, internal = TRUE)
McKenzie <- snotel_download(site_id = 619, internal = TRUE)
# Seperating out data for water year 2004
HP.snotel <- Hogg_Pass[which(Hogg_Pass$date >= "2002-10-01" & Hogg_Pass$date <= "2004-09-30"),]
MK.snotel <- McKenzie[which(McKenzie$date >= "2002-10-01" & McKenzie$date <= "2004-09-30"),]
# Loading the SnowModel data SWE [mm]
HP.model.veg <- scan("HoggPass_model_veg.txt")*1000
HP.model.cc <- scan("HoggPass_model_cc.txt")*1000
MK.model.veg <- scan("McKenzie_model_veg.txt")*1000
MK.model.cc <- scan("McKenzie_model_cc.txt")*1000
# Making a test plot of McKenzie SNOTEL
plot(1:731, MK.snotel$snow_water_equivalent, type='l', ylim = c(0, 1500), xaxt = "n", xlab="Water Year 2003 & 2004", ylab="SWE (mm)", main="McKenzie SNOTEL")
axis(side = 1, at = c(0,92,183,274,365,458,549,640), labels = c("Oct","Jan","Apr","Jul","Oct","Jan","Apr","Jul"))
points(1:731, MK.model.veg, type='l', lty=2, lwd=2, col = "blue")
legend("topleft", legend=c("SNOTEL","SnowModel"), col=c("black","blue"), lty=c(1,2), lwd=c(1,2), cex=0.8, bty="n")
plot(1:731, MK.model.veg, type='l', lty=2, lwd=2, col="blue", ylim = c(0, 1500), xaxt = "n", xlab="Water Year 2003 & 2004", ylab="SWE (mm)", main="McKenzie SNOTEL")
axis(side = 1, at = c(0,92,183,274,365,458,549,640), labels = c("Oct","Jan","Apr","Jul","Oct","Jan","Apr","Jul"))
points(1:731, MK.model.cc, type='l', lty=2, lwd=2, col="red")
legend("topleft", legend=c("SM Conifer Forest","SM Clear Cut"), col=c("blue","red"), lty=c(2,2), lwd=c(2,2),cex=0.8, bty="n")
## Making a test plot of Hogg Pass SNOTEL
#plot(1:731, HP.snotel$snow_water_equivalent, type='l', ylim = c(0, 1500), xaxt = "n", xlab="Water Year 2003 & 2004", ylab="SWE (mm)", main="Hogg Pass SNOTEL")
#axis(side = 1, at = c(0,92,183,274,365,458,549,640), labels = c("Oct","Jan","Apr","Jul","Oct","Jan","Apr","Jul"))
#abline(v=307, col="black", lty=2)
#points(1:731, HP.model.veg, type='l', lty=2, lwd=2, col = "blue")
#points(1:731, HP.model.cc, type='l', lty=2, lwd=2, col = "red")
#legend("topleft", legend=c("SnoTel","SM Conifer Forest","SM Clearcut"), col=c("black","blue","red"), lty=c(1,2,2), lwd(1,2,2),cex=0.8, bty="n")
plot(1:731, HP.snotel$snow_water_equivalent, type='l', ylim = c(0, 1500), xaxt = "n", xlab="Water Year 2003 & 2004", ylab="SWE (mm)", main="Hogg Pass SNOTEL")
axis(side = 1, at = c(0,92,183,274,365,458,549,640), labels = c("Oct","Jan","Apr","Jul","Oct","Jan","Apr","Jul"))
abline(v=307, col="black", lty=2)
points(1:731, HP.model.veg, type='l', lty=2, lwd=2, col = "blue")
legend("topleft", legend=c("SnoTel","SM Conifer Forest"), col=c("black","blue"), lty=c(1,2), lwd(1,2,2),cex=0.8, bty="n")
plot(1:731, HP.snotel$snow_water_equivalent, type='l', ylim = c(0, 1500), xaxt = "n", xlab="Water Year 2003 & 2004", ylab="SWE (mm)", main="Hogg Pass SNOTEL")
axis(side = 1, at = c(0,92,183,274,365,458,549,640), labels = c("Oct","Jan","Apr","Jul","Oct","Jan","Apr","Jul"))
abline(v=307, col="black", lty=2)
points(1:731, HP.model.cc, type='l', lty=2, lwd=2, col = "red")
legend("topleft", legend=c("SNOTEL","SM Clearcut"), col=c("black","red"), lty=c(1,2), lwd(1,2,2),cex=0.8, bty="n")
# Making a PowerPoint plot of McKenzie SNOTEL
par(mar=c(5,5,5,5))
# Plot 1
plot(1:731, MK.snotel$snow_water_equivalent, type='l', ylim = c(0, 1500), xaxt = "n", xlab="Water Year 2003 & 2004", ylab="SWE (mm)", main="McKenzie SNOTEL",cex.lab=2, cex.axis=1.5, cex.main=2)
axis(side = 1, at = c(0,92,183,274,365,458,549,640), labels = c("Oct","Jan","Apr","Jul","Oct","Jan","Apr","Jul"))
legend("topleft", legend=c("SNOTEL"), col=c("black"), lty=1, lwd=1,2, cex=1, bty="n")
# Plot 2
plot(1:731, MK.snotel$snow_water_equivalent, type='l', ylim = c(0, 1500), xaxt = "n", xlab="Water Year 2003 & 2004", ylab="SWE (mm)", main="McKenzie SNOTEL",cex.lab=2, cex.axis=1.5, cex.main=2)
axis(side = 1, at = c(0,92,183,274,365,458,549,640), labels = c("Oct","Jan","Apr","Jul","Oct","Jan","Apr","Jul"))
points(1:731, MK.model.veg, type='l', lty=2, lwd=2, col = "blue")
legend("topleft", legend=c("SNOTEL","SnowModel"), col=c("black","blue"), lty=c(1,2), lwd=c(1,2), cex=1, bty="n")
# Plot 3
plot(1:731, MK.model.veg, type='l', lty=2, lwd=2, col="blue", ylim = c(0, 1500), xaxt = "n", xlab="Water Year 2003 & 2004", ylab="SWE (mm)", main="McKenzie SNOTEL",cex.lab=2, cex.axis=1.5, cex.main=2)
axis(side = 1, at = c(0,92,183,274,365,458,549,640), labels = c("Oct","Jan","Apr","Jul","Oct","Jan","Apr","Jul"))
legend("topleft", legend="SM Conifer Forest", col="blue", lty=2, lwd=2,cex=1, bty="n")
# Plot 4
plot(1:731, MK.model.veg, type='l', lty=2, lwd=2, col="blue", ylim = c(0, 1500), xaxt = "n", xlab="Water Year 2003 & 2004", ylab="SWE (mm)", main="McKenzie SNOTEL",cex.lab=2, cex.axis=1.5, cex.main=2)
axis(side = 1, at = c(0,92,183,274,365,458,549,640), labels = c("Oct","Jan","Apr","Jul","Oct","Jan","Apr","Jul"))
points(1:731, MK.model.cc, type='l', lty=2, lwd=2, col="orange")
legend("topleft", legend=c("SM Conifer Forest","SM Clear Cut"), col=c("blue","orange"), lty=c(2,2), lwd=c(2,2),cex=1, bty="n")
# Making a PowerPoint plot of Hogg Pass SNOTEL
par(mar=c(5,5,5,5))
# Plot 1
plot(1:731, HP.snotel$snow_water_equivalent, type='l', ylim = c(0, 1500), xaxt = "n", xlab="Water Year 2003 & 2004", ylab="SWE (mm)", main="Hogg Pass SNOTEL",cex.lab=2, cex.axis=1.5, cex.main=2)
axis(side = 1, at = c(0,92,183,274,365,458,549,640), labels = c("Oct","Jan","Apr","Jul","Oct","Jan","Apr","Jul"))
abline(v=307, col="black", lty=2)
legend("topleft", legend="SnoTel", col=c("black"), lty=1,lwd1,cex=1.0,bty="n")
# Plot 2
plot(1:731, HP.snotel$snow_water_equivalent, type='l', ylim = c(0, 1500), xaxt = "n", xlab="Water Year 2003 & 2004", ylab="SWE (mm)", main="Hogg Pass SNOTEL",cex.lab=2, cex.axis=1.5, cex.main=2)
axis(side = 1, at = c(0,92,183,274,365,458,549,640), labels = c("Oct","Jan","Apr","Jul","Oct","Jan","Apr","Jul"))
abline(v=307, col="black", lty=2)
points(1:731, HP.model.veg, type='l', lty=2, lwd=2, col = "blue")
legend("topleft", legend=c("SnoTel","SM Conifer Forest"), col=c("black","blue"), lty=c(1,2), lwd(1,2,2),cex=1.0, bty="n")
# Plot 3
plot(1:731, HP.snotel$snow_water_equivalent, type='l', ylim = c(0, 1500), xaxt = "n", xlab="Water Year 2003 & 2004", ylab="SWE (mm)", main="Hogg Pass SNOTEL",cex.lab=2, cex.axis=1.5, cex.main=2)
axis(side = 1, at = c(0,92,183,274,365,458,549,640), labels = c("Oct","Jan","Apr","Jul","Oct","Jan","Apr","Jul"))
abline(v=307, col="black", lty=2)
points(1:731, HP.model.cc, type='l', lty=2, lwd=2, col = "orange")
legend("topleft", legend=c("SNOTEL","SM Clearcut"), col=c("black","orange"), lty=c(1,2), lwd(1,2,2),cex=1.0, bty="n")
# Plots for Paper
### McKenzie ################################################################################
par(mfrow=c(1,2),oma = c(0, 0, 2, 0),bg="gray98")
par(mar=c(7,4,2.5,1.5))
# Plot 2
plot(1:731, MK.snotel$snow_water_equivalent, type='l',lwd=2, ylim = c(0, 1500), xaxt = "n", xlab="Water Year 2003 & 2004", ylab="SWE (mm)", main="")
axis(side = 1, at = c(0,92,183,274,365,458,549,640), labels = c("Oct","Jan","Apr","Jul","Oct","Jan","Apr","Jul"))
points(1:731, MK.model.veg, type='l', lty=2, lwd=3, col = "blue")
text(731,1500,"A")
# Plot 4
plot(1:731, MK.model.veg, type='l', lty=2, lwd=3, col="blue", ylim = c(0, 1500), xaxt = "n", xlab="Water Year 2003 & 2004", ylab="SWE (mm)", main="")
axis(side = 1, at = c(0,92,183,274,365,458,549,640), labels = c("Oct","Jan","Apr","Jul","Oct","Jan","Apr","Jul"))
points(1:731, MK.model.cc, type='l', lty=2, lwd=3, col="orange")
text(731,1500,"B")
mtext("McKenzie SNOTEL", outer = TRUE, cex = 1.5)
par(fig = c(0,1,0,1), oma = c(0,0,0,0), mar = c(0,0,0,0), new = TRUE)
plot(0, 0, type = "n", bty = "n", xaxt = "n", yaxt = "n")
legend('bottom','groups',c("SNOTEL","SM Conifer Forest","SM Clear Cur"),lty=c(1,2,2),lwd=c(2,3,3),col=c('black','blue','orange'),ncol=3,bty ="n",cex=1,text.width=c(0.3,0.3,0.3))
### Hogg Pass ###############################################################################
par(mfrow=c(1,2),oma = c(0, 0, 2, 0),bg="gray98")
par(mar=c(7,4,2.5,1.5))
# Plot 2
plot(1:731, HP.snotel$snow_water_equivalent, type='l',lwd=2, ylim = c(0, 1500), xaxt = "n", xlab="Water Year 2003 & 2004", ylab="SWE (mm)", main="")
axis(side = 1, at = c(0,92,183,274,365,458,549,640), labels = c("Oct","Jan","Apr","Jul","Oct","Jan","Apr","Jul"))
abline(v=307, col="red", lty=2,lwd=2)
points(1:731, HP.model.veg, type='l', lty=2, lwd=3, col = "blue")
text(731,1500,"A")
text(190,1300,expression("B&B Complex Fire" %->%""),col='red')
# Plot 3
plot(1:731, HP.snotel$snow_water_equivalent, type='l',lwd=2, ylim = c(0, 1500), xaxt = "n", xlab="Water Year 2003 & 2004", ylab="SWE (mm)", main="")
axis(side = 1, at = c(0,92,183,274,365,458,549,640), labels = c("Oct","Jan","Apr","Jul","Oct","Jan","Apr","Jul"))
abline(v=307, col="red", lty=2,lwd=2)
points(1:731, HP.model.cc, type='l', lty=2, lwd=3, col = "orange")
text(731,1500,"B")
text(190,1300,expression("B&B Complex Fire" %->%""),col='red')
mtext("Hogg Pass SNOTEL", outer = TRUE, cex = 1.5)
par(fig = c(0,1,0,1), oma = c(0,0,0,0), mar = c(0,0,0,0), new = TRUE)
plot(0, 0, type = "n", bty = "n", xaxt = "n", yaxt = "n")
legend('bottom','groups',c("SNOTEL","SM Conifer Forest","SM Clear Cur"),lty=c(1,2,2),lwd=c(2,3,3),col=c('black','blue','orange'),ncol=3,bty ="n",cex=1,text.width=c(0.3,0.3,0.3))
### Figure 1, different in SWE be both sites ###################################################
# seperating out data for SWE for all the dates after "1990-01-01"
start.date <- as.Date("1990-01-01")
dates <- Hogg_Pass$date[which(as.Date(Hogg_Pass$date)>=start.date)]
SWE.HP <- (Hogg_Pass[which(as.Date(Hogg_Pass$date)>=start.date),])$snow_water_equivalent
SWE.MK <- (McKenzie[which(as.Date(McKenzie$date)>=start.date),])$snow_water_equivalent
# Checking the data SWE[mm]
tail(SWE.HP)
tail(SWE.MK)
# calcualting the difference in swe
SWE.dif.MK.HP <- SWE.MK-SWE.HP
# Checking the data, delta SWE[mm]
tail(SWE.dif.MK.HP)
# MK-PH Plot
par(mfrow=c(1,1),oma = c(0,0,0,0),bg="gray98")
par(mar=c(5.1,4.1,4.1,2.1))
plot(as.Date(dates),SWE.dif.MK.HP, type="l",lwd=3, col="blue", xlab="", ylab="difference in measured SWE (mm)",main="McKenzie minus Hogg Pass")
abline(v=as.Date("2003-08-04"), col="red", lty=2,lwd=2)
text(as.Date("2001-06-01"),1000,expression("B&B Complex Fire" %->%""),col='red')
setwd("~/Desktop/SnowModel/Mikey's Code/Singel Cell Hogg Pass")
# Setting the source file location
sfl <- "~/Desktop/UNR/R Scripts/SnowModel"                    # this is the source file location of R-SnowModel.R
# Setting the working directory
#wd <-  "~/Desktop/UNR/R Scripts/SnowModel/snowmodel_test"        # this file is the demo run of SnowModel
#wd <- "~/Desktop/UNR/R Scripts/SnowModel/Singel Cell Test"       # this file is a single cell test at Hogg Pass SNOTEL
wd <- "~/Desktop/SnowModel/Mikey's Code/Singel Cell Hogg Pass"    # this file is mikey's eddited SnowModel Code
setwd(wd)
#### Step 1: compilling and running Fortran #############################################
setwd(paste(wd,"code",sep="/"))
system("sh compile_snowmodel.script")
setwd(wd)
system("./snowmodel")
#### Step 2: reading the GrADS file #####################################################
# to run this file you will need a folder with R-Snowmodel.R, ctlfile.R, gridp.R, gridt.R, readgrads.R
setwd(sfl)   # This Directory is the folder with R-Snowmodel
source("ctlfile.R")                          # https://github.com/mpaiao/ED2/blob/master/R-utils/readctl.r
source("gridp.R")                            # https://github.com/mpaiao/ED2/blob/master/R-utils/gridp.r
source("gridt.R")                            # https://github.com/mpaiao/ED2/blob/master/R-utils/gridt.r
source("readgrads.R")                        # https://github.com/mpaiao/ED2/blob/master/R-utils/readgrads.r
setwd(paste(wd,"outputs",sep="/"))
micromet.info <- readctl("micromet.ctl")               # Reading micromet
wspd <- readgrads(vari="wspd",info=micromet.info)      # wind speed
snowpack.info <- readctl("snowpack.ctl")               # Reading snowpack
swed <- readgrads(vari="swed",info=snowpack.info)      # swe
canopy <- readgrads(vari="canopy",info=snowpack.info)  # canopy interception
sumqcs <- readgrads(vari="sumqcs",info=snowpack.info)  # summed canopy sublimation
test <- swed$swed[,1,1,1]
plot(swed$gtime,swed$swed[,1,1,1])          # swe in [mm]
plot(canopy$gtime,canopy$canopy[,1,1,1])    # canopy interception [m]
plot(sumqcs$gtime,sumqcs$sumqcs[,1,1,1])    # summed canopy sublimation during simulation [m]
plot(wspd$gtime,wspd$wspd[,1,1,1]) # wind speed in [m/s]
# Setting the working directory
#wd <-  "~/Desktop/UNR/R Scripts/SnowModel/snowmodel_test"        # this file is the demo run of SnowModel
wd <- "~/Desktop/UNR/R Scripts/SnowModel/Singel Cell Test"       # this file is a single cell test at Hogg Pass SNOTEL
#wd <- "~/Desktop/SnowModel/Mikey's Code/Singel Cell Hogg Pass"    # this file is mikey's eddited SnowModel Code
setwd(wd)
#### Step 1: compilling and running Fortran #############################################
setwd(paste(wd,"code",sep="/"))
system("sh compile_snowmodel.script")
setwd(wd)
system("./snowmodel")
# Setting the working directory
wd <-  "~/Desktop/UNR/R Scripts/SnowModel/snowmodel_test"        # this file is the demo run of SnowModel
#wd <- "~/Desktop/UNR/R Scripts/SnowModel/Singel Cell Test"       # this file is a single cell test at Hogg Pass SNOTEL
#wd <- "~/Desktop/SnowModel/Mikey's Code/Singel Cell Hogg Pass"    # this file is mikey's eddited SnowModel Code
setwd(wd)
#### Step 1: compilling and running Fortran #############################################
setwd(paste(wd,"code",sep="/"))
system("sh compile_snowmodel.script")
setwd(wd)
system("./snowmodel")
#### Step 2: reading the GrADS file #####################################################
# to run this file you will need a folder with R-Snowmodel.R, ctlfile.R, gridp.R, gridt.R, readgrads.R
setwd(sfl)   # This Directory is the folder with R-Snowmodel
source("ctlfile.R")                          # https://github.com/mpaiao/ED2/blob/master/R-utils/readctl.r
source("gridp.R")                            # https://github.com/mpaiao/ED2/blob/master/R-utils/gridp.r
source("gridt.R")                            # https://github.com/mpaiao/ED2/blob/master/R-utils/gridt.r
source("readgrads.R")                        # https://github.com/mpaiao/ED2/blob/master/R-utils/readgrads.r
setwd(paste(wd,"outputs",sep="/"))
micromet.info <- readctl("micromet.ctl")               # Reading micromet
wspd <- readgrads(vari="wspd",info=micromet.info)      # wind speed
snowpack.info <- readctl("snowpack.ctl")               # Reading snowpack
swed <- readgrads(vari="swed",info=snowpack.info)      # swe
canopy <- readgrads(vari="canopy",info=snowpack.info)  # canopy interception
sumqcs <- readgrads(vari="sumqcs",info=snowpack.info)  # summed canopy sublimation
test <- swed$swed[,1,1,1]
plot(swed$gtime,swed$swed[,1,1,1])          # swe in [mm]
plot(canopy$gtime,canopy$canopy[,1,1,1])    # canopy interception [m]
plot(sumqcs$gtime,sumqcs$sumqcs[,1,1,1])    # summed canopy sublimation during simulation [m]
plot(wspd$gtime,wspd$wspd[,1,1,1]) # wind speed in [m/s]
