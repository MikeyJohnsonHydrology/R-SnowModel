cell.find <- function(poi = c(591144,4919499),
n.col = 1121,
n.row = 759,
llx = 489747, # utm, zone 10, (m)
lly = 4853924, # utm 10, zone 10, (m)
cellsize = 100 # (m)
)
{
poi.east <- poi[1]     #utm, zone 10, (m)
poi.north <- poi[2]    #utm, zone 10, (m)
x.cell <- floor((poi.east-llx)/cellsize)
y.cell <- floor((poi.north-lly)/cellsize)
cell <- c(x.cell,y.cell)
return(cell)
}
VANMET <- cell.find(c(567886.84,4902393.36))
CENMET <- cell.find(c(568579.94,4899275.09))
Airport <- cell.find(c(491987.02,4876319.99))
floor(2.5)
ceiling(2.5)
cell.find <- function(poi = c(591144,4919499),
n.col = 1121,
n.row = 759,
llx = 489747, # utm, zone 10, (m)
lly = 4853924, # utm 10, zone 10, (m)
cellsize = 100 # (m)
)
{
poi.east <- poi[1]     #utm, zone 10, (m)
poi.north <- poi[2]    #utm, zone 10, (m)
x.cell <- ceiling((poi.east-llx)/cellsize)
y.cell <- ceiling((poi.north-lly)/cellsize)
cell <- c(x.cell,y.cell)
return(cell)
}
#Hogg.Pass.utm10 <- c(591144,4919499) #SnoTel Reported Location
Hogg.Pass.utm10 <- c(591025.39,4919205) #SnoTel Real Location
Hogg.Pass.cell <- cell.find(Hogg.Pass.utm10)
#McKenzie.utm10 <- c(590047,4895863) #SnoTel Reported Location
McKenzie.utm10 <- c(589541.3,4895841.55) #SnoTel Real Location
McKenzie.cell <- cell.find(McKenzie.utm10)
#Roaring.River.utm10 <- c(577844,4861120) #SnoTel Reported Location
Roaring.River.utm10 <- c(577847.67,4861331.67) #SnoTel Real Location
Roaring.River.cell <- cell.find(Roaring.River.utm10)
#################################################
### SnowModel/MicroMet met data
### this file will compile multiple Met Station Data Sets
### into a single file for the McKenzie SnowModel project
### Step 1: organizing SNOTEL data
### Step 2: organizing H.J Amndrews LTER
### Step 3: organizing Eugene Airport Data
### last updated 5-23-2019
#################################################
# year   mo   dy    hr     stn_id  easting  northing  elevation   Tair     RH     speed    dir     precip
#(yyyy) (mm) (dd) (hh.hh) (number)   (m)       (m)      (m)        (C)    (%)     (m/s)   (deg)    (mm/dt)
# setting the working directory
setwd("~/Desktop/McKenzie Project/Met Data/Met File V4")
#################### Step 1: organizing SNOTEL data ####################
library(snotelr)
library(tidyverse)
library(lubridate)
# downloading individual data, SWE[mm] and temp[Degrees C]
Hogg_Pass <- snotel_download(site_id = 526, internal = TRUE)
McKenzie <- snotel_download(site_id = 619, internal = TRUE)
Roaring_River <- snotel_download(site_id = 719, internal = TRUE)
Santiam_Jct <- snotel_download(site_id = 733, internal = TRUE)
Jump_Off_Joe <- snotel_download(site_id = 552, internal = TRUE)
SNOTEL_SM_format <- function(snotel.dat,start.date="2002-10-01",end.date="2004-09-30",hr="12.00",stn.id,easting,northing,elevation){
snotel <- snotel.dat[which(snotel.dat$date >= start.date & snotel.dat$date <= end.date),]
snotel = snotel %>%
mutate(date = ymd(date)) %>%
mutate_at(vars(date), funs(year, month, day))
station.out <- cbind(snotel$year,                          # year
snotel$month,                         # month
snotel$day,                           # day
rep(hr,length(snotel$date)),          # hr
rep(stn.id,length(snotel$date)),      # stn_id
rep(easting,length(snotel$date)),     # easting
rep(northing,length(snotel$date)),    # northing
rep(elevation,length(snotel$date)),   # elevation
snotel$temperature_mean,              # Tair
rep(-9999,length(snotel$date)),       # RH
rep(-9999,length(snotel$date)),       # wind speed
rep(-9999,length(snotel$date)),       # wind dir
snotel$precipitation)                 # precip
station.out[is.na(station.out)] <- -9999
station.out <- as.data.frame(station.out)
names(station.out) <- c("year","mo","dy","hr","stn_id","easting","northing","elevation","Tair","RH","speed","dir","precip")
return(station.out)
}
HoggPass_03_04 <- SNOTEL_SM_format(snotel.dat=Hogg_Pass,start.date="2002-10-01",end.date="2004-09-30",hr=12.00,stn.id=526,easting=591025.39,northing=4919205.46,elevation=1460)
McKenzie_03_04 <- SNOTEL_SM_format(snotel.dat=McKenzie,start.date="2002-10-01",end.date="2004-09-30",hr=12.00,stn.id=619,easting=589541.3,northing=4895841.55,elevation=1454)
RoaringRiver_03_04 <- SNOTEL_SM_format(snotel.dat=Roaring_River,start.date="2002-10-01",end.date="2004-09-30",hr=12.00,stn.id=719,easting=577847.67,northing=4861331.67,elevation=1509)
SantiamJct_03_04 <- SNOTEL_SM_format(snotel.dat=Santiam_Jct,start.date="2002-10-01",end.date="2004-09-30",hr=12.00,stn.id=733,easting=583961.7,northing=4920733.7,elevation=1140)
JumpOffJoe_03_04 <- SNOTEL_SM_format(snotel.dat=Jump_Off_Joe,start.date="2002-10-01",end.date="2004-09-30",hr=12.00,stn.id=552,easting=566364.1,northing=4915089.5,elevation=1073)
#################### Step 2: organizing H.J Amndrews LTER ####################
Air.temperature <- read.csv("Air temperature (daily).csv")
Relative.Humidity <- read.csv("Relative Humidity (daily).csv")
Wind.speed.and.direction <- read.csv("Wind speed and direction (daily).csv")
Precipitation <- read.csv("Precipitation (daily).csv")
LTER_SM_format <- function(sitecode,AT=Air.temperature,RH=Relative.Humidity,Wind=Wind.speed.and.direction,Precip=Precipitation,start.date="2002-10-01",end.date="2004-09-30",hr=12.00,stn.id,easting,northing,elevation){
AT <- AT[which(AT$SITECODE == sitecode),]
AT$DATE <- mdy(AT$DATE)
AT <- AT[which(AT$DATE >= start.date & AT$DATE <= end.date),]
AT = AT %>%
group_by(DATE) %>%
summarize(mean_temp = round(mean(AIRTEMP_MEAN_DAY, na.rm=TRUE),digits=2))
AT = AT %>%
mutate(DATE = ymd(DATE)) %>%
mutate_at(vars(DATE), funs(year, month, day))
if.zero <- rep(-9999,length(AT$DATE))
RH <- RH[which(RH$SITECODE == sitecode),]
RH <- RH[which(as.Date(RH$DATE) >= start.date & as.Date(RH$DATE) <= end.date),]
RH = RH %>%
group_by(DATE) %>%
summarize(mean_RH = round(mean(RELHUM_MEAN_DAY, na.rm=TRUE),digits=2))
RH <- if(length(RH$mean_RH)==0){cbind(if.zero,if.zero)}else{RH}
Wind <- Wind[which(Wind$SITECODE == sitecode),]
Wind <- Wind[which(as.Date(Wind$DATE) >= start.date & as.Date(Wind$DATE) <= end.date),]
Wind = Wind %>%
group_by(DATE) %>%
summarize(mean_sp = round(mean(WSPD_PRO_MEAN_DAY, na.rm = TRUE),digits=2), mean_dir = round(mean(WDIR_PRO_MEAN_DAY, na.rm = TRUE),digits=2))
Wind <- if(length(Wind$mean_sp)==0){cbind(if.zero,if.zero,if.zero)}else{Wind}
Precip <- Precip[which(Precip$SITECODE == sitecode),]
Precip <- Precip[which(as.Date(Precip$DATE) >= start.date & as.Date(Precip$DATE) <= end.date),]
Precip = Precip %>%
group_by(DATE) %>%
summarize(mean_P = round(mean(PRECIP_TOT_DAY, na.rm = TRUE),digits=2))
Precip <- if(length(Precip$mean_P)==0){cbind(if.zero,if.zero)}else{Precip}
station.out <- cbind(AT$year,                           # year
AT$month,                          # month
AT$day,                            # day
rep(hr,length(AT$DATE)),           # hr
rep(stn.id,length(AT$DATE)),       # stn_id
rep(easting,length(AT$DATE)),      # easting
rep(northing,length(AT$DATE)),     # northing
rep(elevation,length(AT$DATE)),    # elevation
AT[,2],                            # Tair
RH[,2],                            # RH
Wind[,2],                          # wind speed
Wind[,3],                          # wind dir
Precip[,2])                        # precip
station.out[is.na(station.out)] <- -9999
station.out <- as.data.frame(station.out)
names(station.out) <- c("year","mo","dy","hr","stn_id","easting","northing","elevation","Tair","RH","speed","dir","precip")
return(station.out)
}
PRIMET_03_04 <- LTER_SM_format(sitecode="PRIMET",AT=Air.temperature,RH=Relative.Humidity,Wind=Wind.speed.and.direction,Precip=Precipitation,start.date="2002-10-01",end.date="2004-09-30",hr=12.00,stn.id=2,easting=559450.18,northing=4895682.66,elevation=430)
UPLMET_03_04 <- LTER_SM_format(sitecode="UPLMET",AT=Air.temperature,RH=Relative.Humidity,Wind=Wind.speed.and.direction,Precip=Precipitation,start.date="2002-10-01",end.date="2004-09-30",hr=12.00,stn.id=3,easting=570326.36,northing=4895251.75,elevation=1294)
CENMET_03_04 <- LTER_SM_format(sitecode="CENMET",AT=Air.temperature,RH=Relative.Humidity,Wind=Wind.speed.and.direction,Precip=Precipitation,start.date="2002-10-01",end.date="2004-09-30",hr=12.00,stn.id=4,easting=568579.94,northing=4899275.09,elevation=1028)
VANMET_03_04 <- LTER_SM_format(sitecode="VANMET",AT=Air.temperature,RH=Relative.Humidity,Wind=Wind.speed.and.direction,Precip=Precipitation,start.date="2002-10-01",end.date="2004-09-30",hr=12.00,stn.id=5,easting=567886.84,northing=4902393.36,elevation=1268)
#################### Step 3: organizing Eugene Airport Met ####################
EugeanAirportRAW <- read.csv("EugeanAirportRAW.csv")
EugAir <- EugeanAirportRAW[EugeanAirportRAW$REPORT_TYPE == "SOD  ",]
EugAir <- select(EugAir,DATE,DailyAverageDryBulbTemperature,DailyAverageRelativeHumidity,DailyAverageWindSpeed,DailySustainedWindDirection,DailyPrecipitation)
names(EugAir) <- c("DATE","Tair","RH","speed","dir","precip")
EugAir$DATE <- as.Date(EugAir$DATE)
EugAir <- EugAir[which(EugAir$DATE >= "2002-10-01" & EugAir$DATE <= "2004-09-30"),]
EugAir$Tair <- round((EugAir$Tair-32)*(5/9),digits=2)
EugAir$speed <- round(EugAir$speed/2.237,digits=2)
EugAir$precip <- gsub("T",NA,EugAir$precip)
EugAir$precip <- gsub("0.00s",NA,EugAir$precip)
EugAir$precip <- round(as.numeric(EugAir$precip)*25.4,digits=2)
EugAir[is.na(EugAir)] <- -9999
EugAir <- EugAir %>%
mutate(DATE = ymd(DATE)) %>%
mutate_at(vars(DATE), funs(year, month, day))
EugAir <- cbind(EugAir,hr=(rep(12.00,length(EugAir$DATE))))
EugAir <- cbind(EugAir,stn_id=(rep(1,length(EugAir$DATE))))
EugAir <- cbind(EugAir,elevation=(rep(174,length(EugAir$DATE))))
EugAir <- cbind(EugAir,easting=(rep(491987.02,length(EugAir$DATE))))
EugAir <- cbind(EugAir,northing=(rep(4876319.99,length(EugAir$DATE))))
EugeneAirport_03_04 <- EugAir[c("year","month","day","hr","stn_id","easting","northing","elevation","Tair","RH","speed","dir","precip")]
names(EugeneAirport_03_04) <- c("year","mo","dy","hr","stn_id","easting","northing","elevation","Tair","RH","speed","dir","precip")
# year   mo   dy    hr     stn_id  easting  northing  elevation   Tair     RH     speed    dir     precip
#(yyyy) (mm) (dd) (hh.hh) (number)   (m)       (m)      (m)        (C)    (%)     (m/s)   (deg)    (mm/dt)
#################### Step 4: compile the stations in to a new file ####################
# station list
# HoggPass_03_04
# McKenzie_03_04
# RoaringRiver_03_04
# SantiamJct_03_04
# JumpOffJoe_03_04
# PRIMET_03_04
# UPLMET_03_04
# CENMET_03_04
# VANMET_03_04
# EugeneAirport_03_04
# setting varibles
stations <-6  # Number of stations
days <- 731 # Number of days
# writing the file
data <- c(stations,rep(NA, 12))
for (i in 1:days){
data <- rbind(data,EugeneAirport_03_04[i,],PRIMET_03_04[i,],UPLMET_03_04[i,],HoggPass_03_04[i,],McKenzie_03_04[i,],RoaringRiver_03_04[i,])
data <- rbind(data,c(stations,rep(NA, 12)))
}
# sprintf("%.2f",12.00) # this line prints 12.00 instead of 12. I may need this at a later date
# printing file to the workind direcory
write.table(data, file = "McKenzie_Met_water_year_03_04_V3", append = FALSE, quote = TRUE, sep = "\t",
eol = "\n", na = "", dec = ".", row.names = FALSE,
col.names = FALSE, qmethod = c("escape", "double"),
fileEncoding = "")
View(McKenzie_03_04)
View(data)
as.date(300)
View(McKenzie_03_04)
##################################################################################################
### SnowModel Run Script, by Mikey Johnson, Univeristy of Nevada Reno, < mikeyj@nevada.unr.edu >
### this script was developed to make a full SnowModel run
### step will require you to set some varibles depending on how you want to run the model
###
### last eddited 5-21-2019
##################################################################################################
# Setting the working directory
sfl <- "~/Desktop/UNR/R Scripts/SnowModel"                    # this is the source file location of R-SnowModel.R
#wd <-  "~/Desktop/UNR/R Scripts/SnowModel/snowmodel_test"    # this is the file of the current snowmodel run
wd <- "~/Desktop/UNR/R Scripts/SnowModel/Singel Cell Test"    # this is the file of the current snowmodel run
setwd(wd)
#### Step 1: compilling and running Fortran #############################################
setwd(paste(wd,"code",sep="/"))
system("sh compile_snowmodel.script")
setwd(wd)
system("./snowmodel")
#### Step 2: reading the GrADS file #####################################################
# to run this file you will need a folder with R-Snowmodel.R, ctlfile.R, gridp.R, gridt.R, readgrads.R
setwd(sfl)   # This Directory is the folder with R-Snowmodel
source("ctlfile.R")                          # https://github.com/mpaiao/ED2/blob/master/R-utils/readctl.r
source("gridp.R")                            # https://github.com/mpaiao/ED2/blob/master/R-utils/gridp.r
source("gridt.R")                            # https://github.com/mpaiao/ED2/blob/master/R-utils/gridt.r
source("readgrads.R")                        # https://github.com/mpaiao/ED2/blob/master/R-utils/readgrads.r
setwd(paste(wd,"outputs",sep="/"))
#info <- readctl("micromet.ctl")              # Reading micromet
#wspd <- readgrads(vari="wspd",info=info)
info <- readctl("snowpack.ctl")              # Reading snowpack
swed <- readgrads(vari="swed",info=info)
canopy <- readgrads(vari="canopy",info=info)
sumqcs <- readgrads(vari="sumqcs",info=info)
#### Step 3: selecting the data of intrest ##############################################
#[day#,z,x?,y?]
test <- swed$swed[,1,1,1]
plot(swed$gtime,swed$swed[,1,1,1])          # swe in [mm]
plot(canopy$gtime,canopy$canopy[,1,1,1])    # canopy interception [m]
plot(sumqcs$gtime,sumqcs$sumqcs[,1,1,1])    # summed canopy sublimation during simulation [m]
#plot(wspd$gtime,test) # wind speed in [m/s]
test <- swed$swed[,1,1,1]
plot(swed$gtime,swed$swed[,1,1,1])          # swe in [mm]
plot(canopy$gtime,canopy$canopy[,1,1,1])    # canopy interception [m]
plot(sumqcs$gtime,sumqcs$sumqcs[,1,1,1])    # summed canopy sublimation during simulation [m]
test <- swed$swed[,1,1,1]
plot(swed$gtime,swed$swed[,1,1,1])          # swe in [mm]
plot(canopy$gtime,canopy$canopy[,1,1,1])    # canopy interception [m]
plot(sumqcs$gtime,sumqcs$sumqcs[,1,1,1])    # summed canopy sublimation during simulation [m]
##################################################################################################
### SnowModel Run Script, by Mikey Johnson, Univeristy of Nevada Reno, < mikeyj@nevada.unr.edu >
### this script was developed to make a full SnowModel run
### step will require you to set some varibles depending on how you want to run the model
###
### last eddited 5-21-2019
##################################################################################################
# Setting the working directory
sfl <- "~/Desktop/UNR/R Scripts/SnowModel"                    # this is the source file location of R-SnowModel.R
#wd <-  "~/Desktop/UNR/R Scripts/SnowModel/snowmodel_test"    # this is the file of the current snowmodel run
wd <- "~/Desktop/UNR/R Scripts/SnowModel/Singel Cell Test"    # this is the file of the current snowmodel run
setwd(wd)
#### Step 1: compilling and running Fortran #############################################
setwd(paste(wd,"code",sep="/"))
system("sh compile_snowmodel.script")
setwd(wd)
system("./snowmodel")
#### Step 2: reading the GrADS file #####################################################
# to run this file you will need a folder with R-Snowmodel.R, ctlfile.R, gridp.R, gridt.R, readgrads.R
setwd(sfl)   # This Directory is the folder with R-Snowmodel
source("ctlfile.R")                          # https://github.com/mpaiao/ED2/blob/master/R-utils/readctl.r
source("gridp.R")                            # https://github.com/mpaiao/ED2/blob/master/R-utils/gridp.r
source("gridt.R")                            # https://github.com/mpaiao/ED2/blob/master/R-utils/gridt.r
source("readgrads.R")                        # https://github.com/mpaiao/ED2/blob/master/R-utils/readgrads.r
setwd(paste(wd,"outputs",sep="/"))
#info <- readctl("micromet.ctl")              # Reading micromet
#wspd <- readgrads(vari="wspd",info=info)
info <- readctl("snowpack.ctl")              # Reading snowpack
swed <- readgrads(vari="swed",info=info)
canopy <- readgrads(vari="canopy",info=info)
sumqcs <- readgrads(vari="sumqcs",info=info)
#### Step 3: selecting the data of intrest ##############################################
#[day#,z,x?,y?]
test <- swed$swed[,1,1,1]
plot(swed$gtime,swed$swed[,1,1,1])          # swe in [mm]
plot(canopy$gtime,canopy$canopy[,1,1,1])    # canopy interception [m]
plot(sumqcs$gtime,sumqcs$sumqcs[,1,1,1])    # summed canopy sublimation during simulation [m]
#plot(wspd$gtime,test) # wind speed in [m/s]
##################################################################################################
### SnowModel Run Script, by Mikey Johnson, Univeristy of Nevada Reno, < mikeyj@nevada.unr.edu >
### this script was developed to make a full SnowModel run
### step will require you to set some varibles depending on how you want to run the model
###
### last eddited 5-21-2019
##################################################################################################
# Setting the working directory
sfl <- "~/Desktop/UNR/R Scripts/SnowModel"                    # this is the source file location of R-SnowModel.R
#wd <-  "~/Desktop/UNR/R Scripts/SnowModel/snowmodel_test"    # this is the file of the current snowmodel run
wd <- "~/Desktop/UNR/R Scripts/SnowModel/Singel Cell Test"    # this is the file of the current snowmodel run
setwd(wd)
#### Step 1: compilling and running Fortran #############################################
setwd(paste(wd,"code",sep="/"))
system("sh compile_snowmodel.script")
setwd(wd)
system("./snowmodel")
#### Step 2: reading the GrADS file #####################################################
# to run this file you will need a folder with R-Snowmodel.R, ctlfile.R, gridp.R, gridt.R, readgrads.R
setwd(sfl)   # This Directory is the folder with R-Snowmodel
source("ctlfile.R")                          # https://github.com/mpaiao/ED2/blob/master/R-utils/readctl.r
source("gridp.R")                            # https://github.com/mpaiao/ED2/blob/master/R-utils/gridp.r
source("gridt.R")                            # https://github.com/mpaiao/ED2/blob/master/R-utils/gridt.r
source("readgrads.R")                        # https://github.com/mpaiao/ED2/blob/master/R-utils/readgrads.r
setwd(paste(wd,"outputs",sep="/"))
#info <- readctl("micromet.ctl")              # Reading micromet
#wspd <- readgrads(vari="wspd",info=info)
info <- readctl("snowpack.ctl")              # Reading snowpack
swed <- readgrads(vari="swed",info=info)
canopy <- readgrads(vari="canopy",info=info)
sumqcs <- readgrads(vari="sumqcs",info=info)
#### Step 3: selecting the data of intrest ##############################################
#[day#,z,x?,y?]
test <- swed$swed[,1,1,1]
plot(swed$gtime,swed$swed[,1,1,1])          # swe in [mm]
plot(canopy$gtime,canopy$canopy[,1,1,1])    # canopy interception [m]
plot(sumqcs$gtime,sumqcs$sumqcs[,1,1,1])    # summed canopy sublimation during simulation [m]
#plot(wspd$gtime,test) # wind speed in [m/s]
##################################################################################################
### SnowModel Run Script, by Mikey Johnson, Univeristy of Nevada Reno, < mikeyj@nevada.unr.edu >
### this script was developed to make a full SnowModel run
### step will require you to set some varibles depending on how you want to run the model
###
### last eddited 5-21-2019
##################################################################################################
# Setting the working directory
sfl <- "~/Desktop/UNR/R Scripts/SnowModel"                    # this is the source file location of R-SnowModel.R
#wd <-  "~/Desktop/UNR/R Scripts/SnowModel/snowmodel_test"    # this is the file of the current snowmodel run
wd <- "~/Desktop/UNR/R Scripts/SnowModel/Singel Cell Test"    # this is the file of the current snowmodel run
setwd(wd)
#### Step 1: compilling and running Fortran #############################################
setwd(paste(wd,"code",sep="/"))
system("sh compile_snowmodel.script")
setwd(wd)
system("./snowmodel")
#### Step 2: reading the GrADS file #####################################################
# to run this file you will need a folder with R-Snowmodel.R, ctlfile.R, gridp.R, gridt.R, readgrads.R
setwd(sfl)   # This Directory is the folder with R-Snowmodel
source("ctlfile.R")                          # https://github.com/mpaiao/ED2/blob/master/R-utils/readctl.r
source("gridp.R")                            # https://github.com/mpaiao/ED2/blob/master/R-utils/gridp.r
source("gridt.R")                            # https://github.com/mpaiao/ED2/blob/master/R-utils/gridt.r
source("readgrads.R")                        # https://github.com/mpaiao/ED2/blob/master/R-utils/readgrads.r
setwd(paste(wd,"outputs",sep="/"))
#info <- readctl("micromet.ctl")              # Reading micromet
#wspd <- readgrads(vari="wspd",info=info)
info <- readctl("snowpack.ctl")              # Reading snowpack
swed <- readgrads(vari="swed",info=info)
canopy <- readgrads(vari="canopy",info=info)
sumqcs <- readgrads(vari="sumqcs",info=info)
#### Step 3: selecting the data of intrest ##############################################
#[day#,z,x?,y?]
test <- swed$swed[,1,1,1]
plot(swed$gtime,swed$swed[,1,1,1])          # swe in [mm]
plot(canopy$gtime,canopy$canopy[,1,1,1])    # canopy interception [m]
plot(sumqcs$gtime,sumqcs$sumqcs[,1,1,1])    # summed canopy sublimation during simulation [m]
#plot(wspd$gtime,test) # wind speed in [m/s]
x <- c(1,2,3,4,5)
y <-  12 - x
x <- c("1","2","3","4","5")
y <-  12 - x
x <- c("2009-12-1")
McKenzie_Met_water_year_2004 <- read.delim("~/Desktop/McKenzie Project/Met Data/Met File V1/McKenzie_Met_water_year_2004.dat", header=FALSE, row.names=1)
View(McKenzie_Met_water_year_2004)
##################################################################################################
### SnowModel Run Script, by Mikey Johnson, Univeristy of Nevada Reno, < mikeyj@nevada.unr.edu >
### this script was developed to make a full SnowModel run
### step will require you to set some varibles depending on how you want to run the model
###
### last eddited 5-21-2019
##################################################################################################
# Setting the working directory
sfl <- "~/Desktop/UNR/R Scripts/SnowModel"                    # this is the source file location of R-SnowModel.R
#wd <-  "~/Desktop/UNR/R Scripts/SnowModel/snowmodel_test"    # this is the file of the current snowmodel run
wd <- "~/Desktop/UNR/R Scripts/SnowModel/Singel Cell Test"    # this is the file of the current snowmodel run
setwd(wd)
#### Step 1: compilling and running Fortran #############################################
setwd(paste(wd,"code",sep="/"))
system("sh compile_snowmodel.script")
setwd(wd)
system("./snowmodel")
#### Step 2: reading the GrADS file #####################################################
# to run this file you will need a folder with R-Snowmodel.R, ctlfile.R, gridp.R, gridt.R, readgrads.R
setwd(sfl)   # This Directory is the folder with R-Snowmodel
source("ctlfile.R")                          # https://github.com/mpaiao/ED2/blob/master/R-utils/readctl.r
source("gridp.R")                            # https://github.com/mpaiao/ED2/blob/master/R-utils/gridp.r
source("gridt.R")                            # https://github.com/mpaiao/ED2/blob/master/R-utils/gridt.r
source("readgrads.R")                        # https://github.com/mpaiao/ED2/blob/master/R-utils/readgrads.r
setwd(paste(wd,"outputs",sep="/"))
#info <- readctl("micromet.ctl")              # Reading micromet
#wspd <- readgrads(vari="wspd",info=info)
info <- readctl("snowpack.ctl")              # Reading snowpack
swed <- readgrads(vari="swed",info=info)
canopy <- readgrads(vari="canopy",info=info)
sumqcs <- readgrads(vari="sumqcs",info=info)
#### Step 3: selecting the data of intrest ##############################################
#[day#,z,x?,y?]
test <- swed$swed[,1,1,1]
plot(swed$gtime,swed$swed[,1,1,1])          # swe in [mm]
plot(canopy$gtime,canopy$canopy[,1,1,1])    # canopy interception [m]
plot(sumqcs$gtime,sumqcs$sumqcs[,1,1,1])    # summed canopy sublimation during simulation [m]
#plot(wspd$gtime,test) # wind speed in [m/s]
info <- readctl("micromet.ctl")              # Reading micromet
wspd <- readgrads(vari="wspd",info=info)
plot(wspd$gtime,test) # wind speed in [m/s]
plot(wspd$gtime,wspd$wspd) # wind speed in [m/s]
##################################################################################################
### SnowModel Run Script, by Mikey Johnson, Univeristy of Nevada Reno, < mikeyj@nevada.unr.edu >
### this script was developed to make a full SnowModel run
### step will require you to set some varibles depending on how you want to run the model
###
### last eddited 5-21-2019
##################################################################################################
# Setting the working directory
sfl <- "~/Desktop/UNR/R Scripts/SnowModel"                    # this is the source file location of R-SnowModel.R
wd <-  "~/Desktop/UNR/R Scripts/SnowModel/snowmodel_test"    # this is the file of the current snowmodel run
#wd <- "~/Desktop/UNR/R Scripts/SnowModel/Singel Cell Test"    # this is the file of the current snowmodel run
setwd(wd)
#### Step 1: compilling and running Fortran #############################################
setwd(paste(wd,"code",sep="/"))
system("sh compile_snowmodel.script")
setwd(wd)
system("./snowmodel")
#### Step 2: reading the GrADS file #####################################################
# to run this file you will need a folder with R-Snowmodel.R, ctlfile.R, gridp.R, gridt.R, readgrads.R
setwd(sfl)   # This Directory is the folder with R-Snowmodel
source("ctlfile.R")                          # https://github.com/mpaiao/ED2/blob/master/R-utils/readctl.r
source("gridp.R")                            # https://github.com/mpaiao/ED2/blob/master/R-utils/gridp.r
source("gridt.R")                            # https://github.com/mpaiao/ED2/blob/master/R-utils/gridt.r
source("readgrads.R")                        # https://github.com/mpaiao/ED2/blob/master/R-utils/readgrads.r
setwd(paste(wd,"outputs",sep="/"))
info <- readctl("micromet.ctl")              # Reading micromet
wspd <- readgrads(vari="wspd",info=info)
info <- readctl("snowpack.ctl")              # Reading snowpack
swed <- readgrads(vari="swed",info=info)
canopy <- readgrads(vari="canopy",info=info)
sumqcs <- readgrads(vari="sumqcs",info=info)
#### Step 3: selecting the data of intrest ##############################################
#[day#,z,x?,y?]
test <- swed$swed[,1,1,1]
plot(swed$gtime,swed$swed[,1,1,1])          # swe in [mm]
plot(canopy$gtime,canopy$canopy[,1,1,1])    # canopy interception [m]
plot(sumqcs$gtime,sumqcs$sumqcs[,1,1,1])    # summed canopy sublimation during simulation [m]
plot(wspd$gtime,wspd$wspd) # wind speed in [m/s]
plot(wspd$gtime,wspd$wspd) # wind speed in [m/s]
info <- readctl("micromet.ctl")              # Reading micromet
wspd <- readgrads(vari="wspd",info=info)
plot(wspd$gtime,wspd$wspd) # wind speed in [m/s]
plot(swed$gtime,swed$swed[,1,1,1])          # swe in [mm]
plot(canopy$gtime,canopy$canopy[,1,1,1])    # canopy interception [m]
plot(sumqcs$gtime,sumqcs$sumqcs[,1,1,1])    # summed canopy sublimation during simulation [m]
snowpack.info <- readctl("snowpack.ctl")              # Reading snowpack
swed <- readgrads(vari="swed",info=snowpack.info)
canopy <- readgrads(vari="canopy",info=snowpack.info)
sumqcs <- readgrads(vari="sumqcs",info=snowpack.info)
test <- swed$swed[,1,1,1]
plot(swed$gtime,swed$swed[,1,1,1])          # swe in [mm]
plot(canopy$gtime,canopy$canopy[,1,1,1])    # canopy interception [m]
plot(sumqcs$gtime,sumqcs$sumqcs[,1,1,1])    # summed canopy sublimation during simulation [m]
View(wspd)
plot(wspd$gtime,wspd$wspd[,1,1,1]) # wind speed in [m/s]
plot(wspd$gtime,wspd$wspd[,1,1,1]) # wind speed in [m/s]
micromet.info <- readctl("micromet.ctl")              # Reading micromet
wspd <- readgrads(vari="wspd",info=micromet.info)
##################################################################################################
### SnowModel Run Script, by Mikey Johnson, Univeristy of Nevada Reno, < mikeyj@nevada.unr.edu >
### this script was developed to make a full SnowModel run
### step will require you to set some varibles depending on how you want to run the model
###
### last eddited 5-21-2019
##################################################################################################
# Setting the working directory
sfl <- "~/Desktop/UNR/R Scripts/SnowModel"                    # this is the source file location of R-SnowModel.R
#wd <-  "~/Desktop/UNR/R Scripts/SnowModel/snowmodel_test"    # this is the file of the current snowmodel run
wd <- "~/Desktop/UNR/R Scripts/SnowModel/Singel Cell Test"    # this is the file of the current snowmodel run
setwd(wd)
#### Step 1: compilling and running Fortran #############################################
setwd(paste(wd,"code",sep="/"))
system("sh compile_snowmodel.script")
setwd(wd)
system("./snowmodel")
#### Step 2: reading the GrADS file #####################################################
# to run this file you will need a folder with R-Snowmodel.R, ctlfile.R, gridp.R, gridt.R, readgrads.R
setwd(sfl)   # This Directory is the folder with R-Snowmodel
source("ctlfile.R")                          # https://github.com/mpaiao/ED2/blob/master/R-utils/readctl.r
source("gridp.R")                            # https://github.com/mpaiao/ED2/blob/master/R-utils/gridp.r
source("gridt.R")                            # https://github.com/mpaiao/ED2/blob/master/R-utils/gridt.r
source("readgrads.R")                        # https://github.com/mpaiao/ED2/blob/master/R-utils/readgrads.r
setwd(paste(wd,"outputs",sep="/"))
micromet.info <- readctl("micromet.ctl")               # Reading micromet
wspd <- readgrads(vari="wspd",info=micromet.info)      # wind speed
snowpack.info <- readctl("snowpack.ctl")               # Reading snowpack
swed <- readgrads(vari="swed",info=snowpack.info)      # swe
canopy <- readgrads(vari="canopy",info=snowpack.info)  # canopy interception
sumqcs <- readgrads(vari="sumqcs",info=snowpack.info)  # summed canopy sublimation
#### Step 3: selecting the data of intrest ##############################################
#[day#,z,x?,y?]
test <- swed$swed[,1,1,1]
plot(swed$gtime,swed$swed[,1,1,1])          # swe in [mm]
plot(canopy$gtime,canopy$canopy[,1,1,1])    # canopy interception [m]
plot(sumqcs$gtime,sumqcs$sumqcs[,1,1,1])    # summed canopy sublimation during simulation [m]
plot(wspd$gtime,wspd$wspd[,1,1,1]) # wind speed in [m/s]
